import tkinter as tk
import threading
import time
import queue

# Prioridades: Erro de Sistema (maior), E/S, Temporizador (menor)
PRIORIDADES = {"Erro de Sistema": 1, "E/S": 2, "Temporizador": 3}

# Fila de interrupções (priority queue)
fila_interrupcoes = queue.PriorityQueue()

# Tratadores de interrupções
def tratador_temporizador():
    log_evento("Interrupção de Temporizador tratada.")

def tratador_entrada_saida():
    log_evento("Interrupção de E/S tratada.")

def tratador_erro_sistema():
    try:
        # Simulação de erro: divisão por zero
        _ = 1 / 0
    except ZeroDivisionError:
        log_evento("Interrupção de Erro de Sistema tratada: divisão por zero capturada.")

# Mapeamento de tratadores
TRATADORES = {
    "Temporizador": tratador_temporizador,
    "E/S": tratador_entrada_saida,
    "Erro de Sistema": tratador_erro_sistema,
}

# Função para logar eventos na interface gráfica
def log_evento(mensagem):
    log_listbox.insert(tk.END, mensagem)
    log_listbox.yview(tk.END)

# Gerador de interrupções
def gerar_interrupcao(tipo):
    prioridade = PRIORIDADES[tipo]
    fila_interrupcoes.put((prioridade, tipo))
    log_evento(f"Interrupção '{tipo}' gerada.")

# Gerador automático de interrupções de temporizador
def gerar_temporizador_automatico():
    while True:
        gerar_interrupcao("Temporizador")
        time.sleep(5)  # Intervalo regular de 5 segundos

# Despachante de interrupções
def despachar_interrupcoes():
    while True:
        if not fila_interrupcoes.empty():
            _, tipo = fila_interrupcoes.get()
            log_evento(f"Processando interrupção: {tipo}")
            TRATADORES[tipo]()
        time.sleep(1)  # Simula tempo de processamento

# Interface gráfica
def iniciar_interface():
    global log_listbox

    janela = tk.Tk()
    janela.title("Simulador de Interrupções")

    frame_botoes = tk.Frame(janela)
    frame_botoes.pack(pady=10)

    tk.Button(frame_botoes, text="Gerar Temporizador", command=lambda: gerar_interrupcao("Temporizador")).pack(side=tk.LEFT, padx=5)
    tk.Button(frame_botoes, text="Gerar E/S", command=lambda: gerar_interrupcao("E/S")).pack(side=tk.LEFT, padx=5)
    tk.Button(frame_botoes, text="Gerar Erro de Sistema", command=lambda: gerar_interrupcao("Erro de Sistema")).pack(side=tk.LEFT, padx=5)

    log_listbox = tk.Listbox(janela, width=50, height=15)
    log_listbox.pack(pady=10)

    tk.Label(janela, text="Logs de Eventos:").pack()

    # Inicia thread para o despachante de interrupções
    threading.Thread(target=despachar_interrupcoes, daemon=True).start()
    # Inicia thread para gerar interrupções de temporizador automaticamente
    threading.Thread(target=gerar_temporizador_automatico, daemon=True).start()

    janela.mainloop()

# Iniciar o programa
if __name__ == "__main__":
    iniciar_interface()
